
from __future__ import print_function
import os.path
from googleapiclient.discovery import build
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials

# Se por acaso refizer o processo de criar Id, delete o token.json.
SCOPES = ['https://www.googleapis.com/auth/spreadsheets.readonly']

# Abaixo coloque o ID da planilha google e qual nome da aba especificando o range.
SAMPLE_SPREADSHEET_ID = Id_AQUI
#No caso o nome da aba é Sheet1, se deixar apenas Sheet1 retornará todo valor da planilha.
SAMPLE_RANGE_NAME = 'Sheet1!A:H'


def main():
    creds = None
    # Vamos criar um token quando for autorizado pela primeira vez, usando credentials
    # Se já haver um token ele apenas o usa para não autenticar mais.
    if os.path.exists('token.json'):
        creds = Credentials.from_authorized_user_file('token.json', SCOPES)
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file(
                'credentials.json', SCOPES)
            creds = flow.run_local_server(port=0)
        # Save the credentials for the next run
        with open('token.json', 'w') as token:
            token.write(creds.to_json())

    service = build('sheets', 'v4', credentials=creds)

    # Call the Sheets API
    sheet = service.spreadsheets()
    result = sheet.values().get(spreadsheetId=SAMPLE_SPREADSHEET_ID,
                                range=SAMPLE_RANGE_NAME).execute()
    values = result.get('values', [])
    import json
    import pandas as pd

    if not values:
        print('No data found.')
    else:
        # Abaixo corrige o erro de caracteres especiais.
        rows = [dict(zip(values[0], (s.encode('latin1').decode('unicode_escape') for s in row))) for row in values[1:]]
        # Convert the list to a JSON string
        json_str = json.dumps(rows, indent=4, ensure_ascii=False)
        df = pd.DataFrame(json.loads(json_str))
        print(df)
if __name__ == '__main__':
    main()
